{"version":3,"sources":["./src/app/transferencias/transferencias.module.ts","./src/app/transferencias/pages/home/home.component.ts","./src/app/transferencias/pages/home/home.component.html","./src/app/transferencias/pages/historial-transferencias/historial-transferencias.component.html","./src/app/transferencias/pages/historial-transferencias/historial-transferencias.component.ts","./src/app/transferencias/transferencias-routing.module.ts","./src/app/transferencias/pages/nav/nav.component.ts","./src/app/transferencias/pages/nav/nav.component.html","./src/app/services/transferencias.service.ts","./src/app/transferencias/pages/realizar-transferencia/realizar-transferencia.component.ts","./src/app/transferencias/pages/realizar-transferencia/realizar-transferencia.component.html","./src/app/transferencias/pages/nuevo-destinatario/nuevo-destinatario.component.ts","./src/app/transferencias/pages/nuevo-destinatario/nuevo-destinatario.component.html"],"names":[],"mappings":"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","file":"transferencias-transferencias-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NavComponent } from './pages/nav/nav.component';\r\nimport { NuevoDestinatarioComponent } from './pages/nuevo-destinatario/nuevo-destinatario.component';\r\nimport { RealizarTransferenciaComponent } from './pages/realizar-transferencia/realizar-transferencia.component';\r\nimport { HistorialTransferenciasComponent } from './pages/historial-transferencias/historial-transferencias.component';\r\nimport { HomeComponent } from './pages/home/home.component';\r\nimport { TransferenciasRoutingModule } from './transferencias-routing.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n@NgModule({\r\n  declarations: [\r\n    NavComponent,\r\n    NuevoDestinatarioComponent,\r\n    RealizarTransferenciaComponent,\r\n    HistorialTransferenciasComponent,\r\n    HomeComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    TransferenciasRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ]\r\n})\r\nexport class TransferenciasModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<app-nav></app-nav>\r\n<router-outlet></router-outlet>\r\n","<div class=\"container\">\r\n  <div class=\"row mb-5\">\r\n    <h1>Historial</h1>\r\n  </div>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-12 mb-3\">\r\n      <table class=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th>Nombre Destinatario</th>\r\n            <th>RUT</th>\r\n            <th>Banco</th>\r\n            <th>tipo de Cuenta</th>\r\n            <th>Monto</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor=\"let transferencia of transferencias\" class=\"table-active\">\r\n            <td>{{ transferencia.nombre }}</td>\r\n            <td>{{ transferencia.rut }}</td>\r\n            <td>{{ transferencia.banco_destino }}</td>\r\n            <td>{{ transferencia.tipo_cuenta }}</td>\r\n            <td>{{ transferencia.monto | currency: \"CLP\" }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { TransferenciasService } from 'src/app/services/transferencias.service';\r\n\r\n@Component({\r\n  selector: 'app-historial-transferencias',\r\n  templateUrl: './historial-transferencias.component.html',\r\n  styleUrls: ['./historial-transferencias.component.css']\r\n})\r\nexport class HistorialTransferenciasComponent implements OnInit {\r\n\r\n  transferencias: any = [];\r\n\r\n  constructor(private tsService: TransferenciasService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.listTransferencias();\r\n  }\r\n\r\n  listTransferencias(){\r\n    this.tsService.listTransferencias().subscribe(res =>{\r\n      this.transferencias = res;\r\n      \r\n    });\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { HistorialTransferenciasComponent } from './pages/historial-transferencias/historial-transferencias.component';\r\nimport { HomeComponent } from './pages/home/home.component';\r\nimport { NuevoDestinatarioComponent } from './pages/nuevo-destinatario/nuevo-destinatario.component';\r\nimport { RealizarTransferenciaComponent } from './pages/realizar-transferencia/realizar-transferencia.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: HomeComponent,\r\n    children: [\r\n      {\r\n        path: 'nuevo-destinatario',\r\n        component: NuevoDestinatarioComponent\r\n      },\r\n      {\r\n        path: 'realizar-transferencia',\r\n        component: RealizarTransferenciaComponent\r\n      },\r\n      {\r\n        path: 'historial-transferencias',\r\n        component: HistorialTransferenciasComponent\r\n      },\r\n      {\r\n        path: '**',\r\n        redirectTo: 'nuevo-destinatario'\r\n      }\r\n    ]\r\n  }\r\n]\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  exports: [\r\n    RouterModule\r\n  ]\r\n})\r\nexport class TransferenciasRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-nav',\r\n  templateUrl: './nav.component.html',\r\n  styleUrls: ['./nav.component.css']\r\n})\r\nexport class NavComponent implements OnInit {\r\n\r\n  constructor(private authService: AuthService, private route: Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  logout(){\r\n\r\n    this.authService.signout().subscribe(\r\n     (res) => {\r\n        \r\n        if (res['message']) {\r\n          localStorage.removeItem('token');\r\n          localStorage.removeItem('userId');\r\n          this.route.navigate(['auth/login']);\r\n        }\r\n        \r\n      }\r\n    );\r\n\r\n  }\r\n\r\n}\r\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark mb-5\">\r\n  <div class=\"container\">\r\n    <a class=\"navbar-brand\" routerLink=\"/transferencias\">Banco</a>\r\n    <button\r\n      class=\"navbar-toggler\"\r\n      type=\"button\"\r\n      data-bs-toggle=\"collapse\"\r\n      data-bs-target=\"#navbarSupportedContent\"\r\n      aria-controls=\"navbarSupportedContent\"\r\n      aria-expanded=\"false\"\r\n      aria-label=\"Toggle navigation\"\r\n    >\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div class=\"fondo collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul class=\"justify-content-center navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" routerLink=\"/transferencias/nuevo-destinatario\"\r\n            >Nuevo Destinatario</a\r\n          >\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a\r\n            class=\"nav-link\"\r\n            routerLink=\"/transferencias/realizar-transferencia\"\r\n            >Transferir</a\r\n          >\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a\r\n            class=\"nav-link\"\r\n            routerLink=\"/transferencias/historial-transferencias\"\r\n            >Historial</a\r\n          >\r\n        </li>\r\n      </ul>\r\n      <button class=\"btn btn-outline-primary\" (click)=\"logout()\" href=\"#!\">\r\n        Cerrar Sesion\r\n      </button>\r\n    </div>\r\n  </div>\r\n</nav>\r\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { Destinatario } from '../interfaces/destinatario.interface';\nimport { Transferencia } from '../interfaces/transferencia.interface';\n\nconst base_url = environment.base_url;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TransferenciasService {\n\n  constructor(private http: HttpClient) { }\n\n   getBanks(){\n    return this.http.get(\"https://bast.dev/api/banks.php\");\n  }\n\n  createDestinatario(destinatario: Destinatario){\n    let formData = new FormData();\n    Object.keys(destinatario).forEach((key)=>{formData.append(key,destinatario[key])});\n\n    return this.http.post(`${base_url}/destinatario/create/${localStorage.getItem('userId')}`,formData);\n  }\n\n  \n  \n  listDestinatarios(){\n    return this.http.get(`${base_url}/destinatario/list/${this.getUserId()}`)\n  }\n  \n  createTransferencia(transferencia: Transferencia){\n    let formData = new FormData();\n    Object.keys(transferencia).forEach((key)=>{formData.append(key,transferencia[key])});\n\n    return this.http.post(`${base_url}/transferencia/create/${localStorage.getItem('userId')}`,formData);\n  }\n\n  listTransferencias(){\n    return this.http.get(`${base_url}/transferencias/${this.getUserId()}`)\n  }\n \n  getUserId() {\n    return localStorage.getItem('userId');\n  }\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, NgModel } from '@angular/forms';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { TransferenciasService } from 'src/app/services/transferencias.service';\r\n\r\n@Component({\r\n  selector: 'app-realizar-transferencia',\r\n  templateUrl: './realizar-transferencia.component.html',\r\n  styleUrls: ['./realizar-transferencia.component.css']\r\n})\r\nexport class RealizarTransferenciaComponent implements OnInit {\r\n\r\n  destinatarios: any = [];\r\n  rut: string = \"\";\r\n  nombre: string = \"\";\r\n  email: string = \"\";\r\n  tipo_cuenta: string = \"\";\r\n  banco_destino: string = \"\";\r\n  numero_cuenta: string =\"\";\r\n  monto: string = '';\r\n  readyDestinatario: boolean = false;\r\n  transferenciaForm: FormGroup = this.fb.group({\r\n   \r\n    monto: ['',[Validators.required,]],\r\n\r\n  })\r\n  \r\n  \r\n  constructor(private tsService: TransferenciasService, private fb: FormBuilder) { }\r\n\r\n  ngOnInit(): void {\r\n    this.listDestinatarios();\r\n\r\n  }\r\n\r\n  listDestinatarios(){\r\n    this.tsService.listDestinatarios().subscribe(res =>{\r\n      this.destinatarios = res;\r\n    });\r\n  }\r\n\r\n  encuentraDestinatario(destinatario: Object){\r\n\r\n    let datos = destinatario['target']['value'].split('|');\r\n\r\n    if (datos.length == 3) {\r\n      let encontrado = this.destinatarios.filter(x => (x.nombre === datos[0]) && (x.rut === datos[1]) && (x.banco_destino === datos[2]))[0];\r\n      this.nombre = encontrado.nombre;\r\n      this.rut = encontrado.rut;\r\n      this.tipo_cuenta = encontrado.tipo_cuenta;\r\n      this.banco_destino = encontrado.banco_destino;\r\n      this.email = encontrado.email;\r\n      this.numero_cuenta = encontrado.numero_cuenta;\r\n      this.readyDestinatario = true;\r\n    }\r\n    \r\n    \r\n  }\r\n  transferir(){\r\n\r\n    if (this.transferenciaForm.invalid || !this.readyDestinatario) {\r\n      Swal.fire('Tenemos un problema', `Debe ingresar un monto y un destinatario`, 'error');\r\n    }else{\r\n      const objTransferencia = {\r\n        nombre: this.nombre ,\r\n        rut: this.rut,\r\n        email: this.email ,\r\n        tipo_cuenta: this.tipo_cuenta,\r\n        numero_cuenta: this.numero_cuenta,\r\n        banco_destino: this.banco_destino,\r\n        monto: this.transferenciaForm.value.monto\r\n      }\r\n      this.tsService.createTransferencia(objTransferencia).subscribe(res =>{\r\n        console.log(res);\r\n        Swal.fire('Transferencia realizada', `Su transferencia fue realizada exitosamente.`, 'success');\r\n        this.nombre = '';\r\n        this.rut = \"\";\r\n        this.tipo_cuenta = \"\";\r\n        this.banco_destino = \"\";\r\n        this.email = \"\";\r\n        this.numero_cuenta = \"\";\r\n        this.readyDestinatario = false;\r\n        this.transferenciaForm.reset();\r\n      }, error =>{\r\n        Swal.fire('Tenemos un problema', `${error.error.error}`, 'error');\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"row mb-5\">\r\n    <h1>Transferir</h1>\r\n  </div>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-12 col-md-6 mb-3\">\r\n      <label for=\"exampleDataList\" class=\"form-label\"\r\n        >Buscar Destinatario</label\r\n      >\r\n      <input\r\n        class=\"form-control\"\r\n        list=\"datalistOptions\"\r\n        id=\"exampleDataList\"\r\n        placeholder=\"Escriba nombre, correo o rut a buscar\"\r\n        (change)=\"encuentraDestinatario($event)\"\r\n      />\r\n      <datalist id=\"datalistOptions\">\r\n        <option\r\n          *ngFor=\"let destinatario of destinatarios\"\r\n          [value]=\"\r\n            destinatario.nombre +\r\n            '|' +\r\n            destinatario.rut +\r\n            '|' +\r\n            destinatario.banco_destino\r\n          \"\r\n        >\r\n          {{ destinatario.rut }} - {{ destinatario.email }}\r\n        </option>\r\n      </datalist>\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col-12\">\r\n      <h5>Detalle del destinatario</h5>\r\n    </div>\r\n    <div class=\"col-12\">Nombre: {{ nombre }}</div>\r\n    <div class=\"col-12\">Correo: {{ email }}</div>\r\n    <div class=\"col-12\">Banco: {{ banco_destino }}</div>\r\n    <div class=\"col-12\">Tipo de Cuenta: {{ tipo_cuenta }}</div>\r\n  </div>\r\n  <form\r\n    [formGroup]=\"transferenciaForm\"\r\n    (ngSubmit)=\"transferir()\"\r\n    autocomplete=\"off\"\r\n  >\r\n    <div class=\"row mt-5\">\r\n      <div class=\"col-12 col-md-6 mb-3\">\r\n        <label for=\"monto\" class=\"form-label\">Monto</label>\r\n        <input\r\n          type=\"number\"\r\n          class=\"form-control\"\r\n          id=\"monto\"\r\n          name=\"monto\"\r\n          min=\"0\"\r\n          formControlName=\"monto\"\r\n          placeholder=\"Ingrese monto a transferir ...\"\r\n        />\r\n        <span\r\n          *ngIf=\"\r\n            transferenciaForm.controls.monto.errors &&\r\n            transferenciaForm.controls.monto.touched\r\n          \"\r\n          class=\"form-text text-danger\"\r\n        >\r\n          Debe engresar un monto mayor a 0\r\n        </span>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row mt-5\">\r\n      <div class=\"col-12 text-center\">\r\n        <button type=\"submit\" class=\"btn btn-primary btn-lg\">Transferir</button>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { TransferenciasService } from 'src/app/services/transferencias.service';\r\nimport { FormBuilder, Validators, FormGroup, NgForm } from '@angular/forms';\r\nimport Swal from 'sweetalert2';\r\n@Component({\r\n  selector: 'app-nuevo-destinatario',\r\n  templateUrl: './nuevo-destinatario.component.html',\r\n  styleUrls: ['./nuevo-destinatario.component.css']\r\n})\r\nexport class NuevoDestinatarioComponent implements OnInit {\r\n\r\n  banks: Array<Object> = [];\r\n  cuentas: Array<String> = ['Corriente', 'Ahorro', 'Vista'];\r\n  expregCorreo = new RegExp(\"^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$\");\r\n  expregRut = new RegExp(\"^[0-9]+-[0-9kK]{1}$\");\r\n  bankSelected: string = \"\";\r\n  cuentaSelected: string = \"\";\r\n  destinatarioForm: FormGroup = this.fb.group({\r\n    rut: ['',[Validators.required,Validators.pattern(this.expregRut)]],\r\n    nombre: ['',[Validators.required,]],\r\n    email: ['',[Validators.required,Validators.pattern(this.expregCorreo)]],\r\n    telefono: ['',[Validators.required,]],\r\n    banco_destino: ['',[Validators.required,]],\r\n    tipo_cuenta: ['',[Validators.required,]],\r\n    numero_cuenta: ['',[Validators.required,]],\r\n\r\n  })\r\n  \r\n \r\n\r\n  constructor(private fb: FormBuilder ,private tsService: TransferenciasService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getBanks()\r\n  }\r\n\r\n  getBanks(){\r\n\r\n    this.tsService.getBanks().subscribe(\r\n\r\n      res =>{\r\n\r\n        this.banks = res['banks'];\r\n        \r\n      }\r\n    )\r\n  }\r\n\r\n  create(){\r\n         \r\n   this.tsService.createDestinatario(this.destinatarioForm.value).subscribe( res =>{\r\n\r\n     Swal.fire('Destinatario añadido', 'Su destinatario fue añadido correctamente', 'success');\r\n     this.clear();\r\n\r\n   }, error =>{\r\n     if(error.error.error){\r\n\r\n      Swal.fire('Tenemos un problema', `${error.error.error}`, 'error');\r\n\r\n  }})\r\n   \r\n  }\r\n  clear(){\r\n    this.destinatarioForm.reset();\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"row mb-5\">\r\n    <h1>Nuevo destinatario</h1>\r\n  </div>\r\n  <form [formGroup]=\"destinatarioForm\" (ngSubmit)=\"create()\" autocomplete=\"off\">\r\n    <div class=\"row\">\r\n      <div class=\"col-12 col-md-6 mb-3\">\r\n        <label for=\"rut\" class=\"form-label\">RUT:</label>\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          id=\"rut\"\r\n          formControlName=\"rut\"\r\n          placeholder=\"Ingrese su rut sin puntos y con guion:  xxxxxxxx-x\"\r\n        />\r\n        <span\r\n          *ngIf=\"\r\n            destinatarioForm.controls.rut.errors &&\r\n            destinatarioForm.controls.rut.touched\r\n          \"\r\n          class=\"form-text text-danger\"\r\n        >\r\n          El el formato del rut debe ser sin puntos y con guion: xxxxxxxx-x\r\n        </span>\r\n      </div>\r\n\r\n      <div class=\"col-12 col-md-6 mb-3\">\r\n        <label for=\"nombre\" class=\"form-label\">Nombre:</label>\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          id=\"nombre\"\r\n          name=\"nombre\"\r\n          formControlName=\"nombre\"\r\n          placeholder=\"Ingrese nombre...\"\r\n        />\r\n        <span\r\n          *ngIf=\"\r\n            destinatarioForm.controls.nombre.errors &&\r\n            destinatarioForm.controls.nombre.touched\r\n          \"\r\n          class=\"form-text text-danger\"\r\n        >\r\n          El campo nombre es requerido\r\n        </span>\r\n      </div>\r\n\r\n      <div class=\"col-12 col-md-6 mb-3\">\r\n        <label for=\"email\" class=\"form-label\">Correo</label>\r\n        <input\r\n          type=\"email\"\r\n          class=\"form-control\"\r\n          id=\"email\"\r\n          name=\"email\"\r\n          formControlName=\"email\"\r\n          placeholder=\"Ingrese Correo electronico\"\r\n        />\r\n        <span\r\n          *ngIf=\"\r\n            destinatarioForm.controls.email.errors &&\r\n            destinatarioForm.controls.email.touched\r\n          \"\r\n          class=\"form-text text-danger\"\r\n        >\r\n          El campo correo es requerido\r\n        </span>\r\n      </div>\r\n\r\n      <div class=\"col-12 col-md-6 mb-3\">\r\n        <label for=\"telefono\" class=\"form-label\">Telefono:</label>\r\n        <input\r\n          type=\"number\"\r\n          class=\"form-control\"\r\n          id=\"telefono\"\r\n          name=\"telefono\"\r\n          formControlName=\"telefono\"\r\n          placeholder=\"Ingrese numero de telefono...\"\r\n        />\r\n        <span\r\n          *ngIf=\"\r\n            destinatarioForm.controls.telefono.errors &&\r\n            destinatarioForm.controls.telefono.touched\r\n          \"\r\n          class=\"form-text text-danger\"\r\n        >\r\n          El campo telefono es requerido\r\n        </span>\r\n      </div>\r\n\r\n      <div class=\"col-12 col-md-6 mb-3\">\r\n        <label for=\"banco\" class=\"form-label\">Banco:</label>\r\n        <select\r\n          ([ngModel])=\"(bankSelected)\"\r\n          class=\"form-select form-select mb-3\"\r\n          aria-label=\".form-select-lg example\"\r\n          id=\"banco\"\r\n          formControlName=\"banco_destino\"\r\n        >\r\n          <option *ngFor=\"let bank of banks\" [value]=\"bank.name\">\r\n            {{ bank.name }}\r\n          </option>\r\n        </select>\r\n        <span\r\n          *ngIf=\"\r\n            destinatarioForm.controls.banco_destino.errors &&\r\n            destinatarioForm.controls.banco_destino.touched\r\n          \"\r\n          class=\"form-text text-danger\"\r\n        >\r\n          El campo banco es requerido\r\n        </span>\r\n      </div>\r\n\r\n      <div class=\"col-12 col-md-6 mb-3\">\r\n        <label for=\"cuenta\" class=\"form-label\">Tipo de Cuenta:</label>\r\n        <select\r\n          ([ngModel])=\"(cuentaSelected)\"\r\n          class=\"form-select form-select mb-3\"\r\n          aria-label=\".form-select-lg example\"\r\n          id=\"cuenta\"\r\n          formControlName=\"tipo_cuenta\"\r\n        >\r\n          <option *ngFor=\"let cuenta of cuentas\" [value]=\"cuenta\">\r\n            {{ cuenta }}\r\n          </option>\r\n        </select>\r\n        <span\r\n          *ngIf=\"\r\n            destinatarioForm.controls.tipo_cuenta.errors &&\r\n            destinatarioForm.controls.tipo_cuenta.touched\r\n          \"\r\n          class=\"form-text text-danger\"\r\n        >\r\n          El campo cuenta es requerido\r\n        </span>\r\n      </div>\r\n\r\n      <div class=\"col-12 col-md-6 mb-3\">\r\n        <label for=\"numero_cuenta\" class=\"form-label\">N° de Cuenta:</label>\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          id=\"numero_cuenta\"\r\n          name=\"numero_cuenta\"\r\n          formControlName=\"numero_cuenta\"\r\n          placeholder=\"Ingrese El numero de cuenta del destinatario\"\r\n        />\r\n        <span\r\n          *ngIf=\"\r\n            destinatarioForm.controls.numero_cuenta.errors &&\r\n            destinatarioForm.controls.numero_cuenta.touched\r\n          \"\r\n          class=\"form-text text-danger\"\r\n        >\r\n          El Numero de la cuenta es requerido\r\n        </span>\r\n      </div>\r\n    </div>\r\n    <div class=\"row mt-5\">\r\n      <div class=\"col-12 text-center\">\r\n        <button\r\n          [disabled]=\"destinatarioForm.invalid\"\r\n          class=\"btn btn-primary btn-lg\"\r\n          type=\"submit\"\r\n        >\r\n          Crear\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</div>\r\n"],"sourceRoot":"webpack:///"}